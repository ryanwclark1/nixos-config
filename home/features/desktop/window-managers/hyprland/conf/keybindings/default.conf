# -----------------------------------------------------
# Default Hyprland Keybindings
# Migrated from basic-binds.nix with requested modifications
# -----------------------------------------------------

# Variables for cleaner syntax (using global variables from variables.conf)
# Note: Global path variables are defined in variables.conf:
# $HYPR_SCRIPTS, $SYSTEM_SCRIPTS, $WAYLAND_SCRIPTS, $ROFI_SCRIPTS

# Mouse bindings
bindm = $mainMod, mouse:272, movewindow
bindm = $mainMod, mouse:273, resizewindow

# -----------------------------------------------------
# Window Management
# -----------------------------------------------------
bind = $mainMod, Q, killactive
bind = ALT, F4, killactive
bind = $mainMod SHIFT, Q, exec, hyprctl activewindow | grep pid | tr -d 'pid:' | xargs kill
bind = $mainMod SHIFT, E, exit
bind = $mainMod SHIFT, SPACE, togglefloating
bind = $mainMod, F, fullscreen, 1
bind = $mainMod SHIFT, F, fullscreen, 0
bind = $mainMod, M, fullscreen, 0
bind = $mainMod, R, togglesplit  # Moved from P to avoid VM passthrough conflict
bind = $mainMod, G, togglegroup
bind = $mainMod, T, lockactivegroup, toggle
bind = $mainMod, I, pseudo
bind = $mainMod, K, swapsplit

# Window sizing
bind = $mainMod, minus, splitratio, -0.1
bind = $mainMod, equal, splitratio, 0.1
bind = $mainMod SHIFT, minus, splitratio, -0.2
bind = $mainMod SHIFT, equal, splitratio, 0.2

# -----------------------------------------------------
# Navigation & Focus (Updated per user request)
# -----------------------------------------------------

# SUPER + left/right: Application switching (like Alt+Tab)
bind = $mainMod, left, cyclenext
bind = $mainMod, right, cyclenext, prev

# SUPER SHIFT + left/right: Move window to previous/next workspace  
bind = $mainMod SHIFT, left, movetoworkspace, e-1
bind = $mainMod SHIFT, right, movetoworkspace, e+1

# Workspace navigation via Tab and other keys
bind = $mainMod, Tab, workspace, e+1
bind = $mainMod SHIFT, Tab, workspace, e-1
bind = $mainMod, apostrophe, workspace, previous
bind = $mainMod, mouse_down, workspace, e+1
bind = $mainMod, mouse_up, workspace, e-1

# Focus movement (vim keys + arrow keys)
bind = $mainMod, H, movefocus, l
bind = $mainMod, L, movefocus, r
bind = $mainMod, K, movefocus, u
bind = $mainMod, J, movefocus, d
bind = $mainMod, up, movefocus, up
bind = $mainMod, down, movefocus, down

# Window movement (vim keys + arrow keys)
bind = $mainMod SHIFT, H, movewindow, l
bind = $mainMod SHIFT, L, movewindow, r
bind = $mainMod SHIFT, K, movewindow, u
bind = $mainMod SHIFT, J, movewindow, d
bind = $mainMod SHIFT, up, movewindow, up
bind = $mainMod SHIFT, down, movewindow, down

# Window resizing (vim keys + arrow keys)
bind = $mainMod CTRL, H, resizeactive, -20 0
bind = $mainMod CTRL, L, resizeactive, 20 0
bind = $mainMod CTRL, K, resizeactive, 0 -20
bind = $mainMod CTRL, J, resizeactive, 0 20
bind = $mainMod CTRL, left, resizeactive, -20 0
bind = $mainMod CTRL, right, resizeactive, 20 0
bind = $mainMod CTRL, up, resizeactive, 0 -20
bind = $mainMod CTRL, down, resizeactive, 0 20

# -----------------------------------------------------
# Workspace Management
# -----------------------------------------------------

# Number key workspaces (1-10)
bind = $mainMod, 1, workspace, 1
bind = $mainMod, 2, workspace, 2
bind = $mainMod, 3, workspace, 3
bind = $mainMod, 4, workspace, 4
bind = $mainMod, 5, workspace, 5
bind = $mainMod, 6, workspace, 6
bind = $mainMod, 7, workspace, 7
bind = $mainMod, 8, workspace, 8
bind = $mainMod, 9, workspace, 9
bind = $mainMod, 0, workspace, 10

# Move window to workspace (1-10)
bind = $mainMod SHIFT, 1, movetoworkspace, 1
bind = $mainMod SHIFT, 2, movetoworkspace, 2
bind = $mainMod SHIFT, 3, movetoworkspace, 3
bind = $mainMod SHIFT, 4, movetoworkspace, 4
bind = $mainMod SHIFT, 5, movetoworkspace, 5
bind = $mainMod SHIFT, 6, movetoworkspace, 6
bind = $mainMod SHIFT, 7, movetoworkspace, 7
bind = $mainMod SHIFT, 8, movetoworkspace, 8
bind = $mainMod SHIFT, 9, movetoworkspace, 9
bind = $mainMod SHIFT, 0, movetoworkspace, 10

# Numpad workspace switching
bind = $mainMod, KP_1, workspace, 1
bind = $mainMod, KP_2, workspace, 2
bind = $mainMod, KP_3, workspace, 3
bind = $mainMod, KP_4, workspace, 4
bind = $mainMod, KP_5, workspace, 5
bind = $mainMod, KP_6, workspace, 6
bind = $mainMod, KP_7, workspace, 7
bind = $mainMod, KP_8, workspace, 8
bind = $mainMod, KP_9, workspace, 9
bind = $mainMod, KP_0, workspace, 10

# Numpad move window to workspace
bind = $mainMod SHIFT, KP_1, movetoworkspace, 1
bind = $mainMod SHIFT, KP_2, movetoworkspace, 2
bind = $mainMod SHIFT, KP_3, movetoworkspace, 3
bind = $mainMod SHIFT, KP_4, movetoworkspace, 4
bind = $mainMod SHIFT, KP_5, movetoworkspace, 5
bind = $mainMod SHIFT, KP_6, movetoworkspace, 6
bind = $mainMod SHIFT, KP_7, movetoworkspace, 7
bind = $mainMod SHIFT, KP_8, movetoworkspace, 8
bind = $mainMod SHIFT, KP_9, movetoworkspace, 9
bind = $mainMod SHIFT, KP_0, movetoworkspace, 10

# Special workspace (scratchpad)
bind = $mainMod, U, togglespecialworkspace, scratchpad
bind = $mainMod SHIFT, U, movetoworkspace, special:scratchpad

# Additional workspace utilities
bind = $mainMod CTRL, down, workspace, empty

# -----------------------------------------------------
# VM Passthrough Mode
# -----------------------------------------------------
# Enter passthrough mode to send SUPER key to virtual machines
bind = $mainMod, P, submap, passthru
submap = passthru
bind = SUPER, Escape, submap, reset
submap = reset

# -----------------------------------------------------
# Applications
# -----------------------------------------------------
bind = $mainMod, Return, exec, kitty
bind = $mainMod, E, exec, code
bind = $mainMod, B, exec, google-chrome-stable
bind = $mainMod, N, exec, nautilus
bind = $mainMod ALT, SPACE, exec, nautilus

# Utility applications  
bind = $mainMod CTRL, E, exec, pkill rofi || rofi -modi emoji -show emoji
bind = $mainMod CTRL, C, exec, pkill rofi || rofi -show calc -modi calc -no-show-match -no-sort

# -----------------------------------------------------
# Rofi Menus (conditional - will work if rofi is available)
# -----------------------------------------------------
bind = $mainMod, SPACE, exec, rofi -show drun -theme ~/.config/rofi/style/launcher-center.rasi
bind = $mainMod, X, exec, rofi -show drun -theme ~/.config/rofi/style/launcher-center.rasi  
bind = $mainMod, Z, exec, rofi -show drun -theme ~/.config/rofi/style/launcher-full.rasi
bind = $mainMod SHIFT, W, exec, web-search
bind = $mainMod, V, exec, cliphist list | rofi -dmenu -theme ~/.config/rofi/style/cliphist.rasi | cliphist decode | wl-copy

# -----------------------------------------------------
# Screenshots
# -----------------------------------------------------
bind = , Print, exec, $WAYLAND_SCRIPTS/screenshot.sh area
bind = $mainMod, S, exec, $WAYLAND_SCRIPTS/screenshot.sh area
bind = $mainMod SHIFT, S, exec, $WAYLAND_SCRIPTS/screenshot.sh screen

# OCR Screenshot - capture area and extract text to clipboard
bind = ALT, Print, exec, grimblast --freeze save area - | tesseract - - | wl-copy && notify-send -t 3000 'OCR result copied to buffer'

# -----------------------------------------------------
# Power & System Management
# -----------------------------------------------------
bind = $mainMod, Escape, exec, $SYSTEM_SCRIPTS/power.sh
bind = $mainMod, BackSpace, exec, wlogout

# System management
bind = $mainMod CTRL, R, exec, hyprctl reload
bind = $mainMod CTRL, B, exec, pkill waybar; sleep 0.5; waybar &
bind = $mainMod CTRL, L, exec, hyprlock

# -----------------------------------------------------
# Function Keys & Keybinding Help
# -----------------------------------------------------
bind = $mainMod, F1, exec, $HYPR_SCRIPTS/hyprland-keybindings.sh
bind = $mainMod CTRL, K, exec, $HYPR_SCRIPTS/hyprland-keybindings.sh

# -----------------------------------------------------
# Media Keys (with conditional SwayOSD support)
# -----------------------------------------------------

# Audio playback control
bind = , XF86AudioNext, exec, playerctl next
bind = , XF86AudioPrev, exec, playerctl previous  
bind = , XF86AudioPlay, exec, playerctl play-pause
bind = , XF86AudioStop, exec, playerctl stop
bind = SHIFT, XF86AudioNext, exec, playerctld shift
bind = SHIFT, XF86AudioPrev, exec, playerctld unshift
bind = SHIFT, XF86AudioPlay, exec, systemctl --user restart playerctld

# Volume control (SwayOSD with wpctl fallback)
bind = , XF86AudioRaiseVolume, exec, command -v swayosd-client >/dev/null && swayosd-client --output-volume raise || (wpctl set-mute @DEFAULT_AUDIO_SINK@ 0 && wpctl set-volume -l 1 @DEFAULT_AUDIO_SINK@ 5%+)
bind = , XF86AudioLowerVolume, exec, command -v swayosd-client >/dev/null && swayosd-client --output-volume lower || wpctl set-volume @DEFAULT_AUDIO_SINK@ 5%-
bind = , XF86AudioMute, exec, command -v swayosd-client >/dev/null && swayosd-client --output-volume mute-toggle || wpctl set-mute @DEFAULT_AUDIO_SINK@ toggle
bind = SHIFT, XF86AudioRaiseVolume, exec, command -v swayosd-client >/dev/null && swayosd-client --input-volume raise || wpctl set-volume -l 1 @DEFAULT_AUDIO_SOURCE@ 5%+
bind = SHIFT, XF86AudioLowerVolume, exec, command -v swayosd-client >/dev/null && swayosd-client --input-volume lower || wpctl set-volume @DEFAULT_AUDIO_SOURCE@ 5%-
bind = SHIFT, XF86AudioMute, exec, command -v swayosd-client >/dev/null && swayosd-client --input-volume mute-toggle || wpctl set-mute @DEFAULT_AUDIO_SOURCE@ toggle
bind = , XF86AudioMicMute, exec, command -v swayosd-client >/dev/null && swayosd-client --input-volume mute-toggle || wpctl set-mute @DEFAULT_AUDIO_SOURCE@ toggle

# Brightness control (SwayOSD with brightnessctl fallback)
bind = , XF86MonBrightnessUp, exec, command -v swayosd-client >/dev/null && swayosd-client --brightness raise || brightnessctl -q set +10%
bind = , XF86MonBrightnessDown, exec, command -v swayosd-client >/dev/null && swayosd-client --brightness lower || brightnessctl -q set 10%-

# Hardware keys
bind = , XF86Calculator, exec, pkill rofi || rofi -show calc -modi calc -no-show-match -no-sort
bind = , XF86Lock, exec, hyprlock

# -----------------------------------------------------
# Special Features
# -----------------------------------------------------

# SwayOSD caps lock indicator
bind = , Caps_Lock, exec, $HYPR_SCRIPTS/caps-lock-osd.sh

# Plugin bindings (Hyprexpo)
bind = $mainMod ALT, grave, hyprexpo:expo, toggle

# -----------------------------------------------------
# Optional Advanced Features (from backup configs)
# -----------------------------------------------------

# Move all windows to workspace (uncomment if moveTo.sh script exists)
# bind = $mainMod CTRL, 1, exec, $HYPR_SCRIPTS/hypr/move-to.sh 1
# bind = $mainMod CTRL, 2, exec, $HYPR_SCRIPTS/hypr/move-to.sh 2
# bind = $mainMod CTRL, 3, exec, $HYPR_SCRIPTS/hypr/move-to.sh 3
# bind = $mainMod CTRL, 4, exec, $HYPR_SCRIPTS/hypr/move-to.sh 4
# bind = $mainMod CTRL, 5, exec, $HYPR_SCRIPTS/hypr/move-to.sh 5
# bind = $mainMod CTRL, 6, exec, $HYPR_SCRIPTS/hypr/move-to.sh 6
# bind = $mainMod CTRL, 7, exec, $HYPR_SCRIPTS/hypr/move-to.sh 7
# bind = $mainMod CTRL, 8, exec, $HYPR_SCRIPTS/hypr/move-to.sh 8
# bind = $mainMod CTRL, 9, exec, $HYPR_SCRIPTS/hypr/move-to.sh 9
# bind = $mainMod CTRL, 0, exec, $HYPR_SCRIPTS/hypr/move-to.sh 10

# Game mode toggle (uncomment if gamemode.sh script exists)
# bind = $mainMod ALT, G, exec, $HYPR_SCRIPTS/hypr/gamemode.sh

# Screen shader toggle (uncomment if hyprshade.sh script exists)  
# bind = $mainMod SHIFT, H, exec, $HYPR_SCRIPTS/hypr/hyprshade.sh

# Animations toggle (uncomment if toggle-animations.sh script exists)
# bind = $mainMod SHIFT, A, exec, $HYPR_SCRIPTS/hypr/toggle-animations.sh

# Mac-style keyboard backlight (uncomment for Mac systems)
# bind = , code:238, exec, brightnessctl -d smc::kbd_backlight s +10
# bind = , code:237, exec, brightnessctl -d smc::kbd_backlight s 10-