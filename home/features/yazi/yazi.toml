"$schema" = "https://yazi-rs.github.io/schemas/yazi.json"

[manager]
ratio = [1, 3, 4]
sort_by = "natural"
sort_sensitive = false
sort_dir_first = true
sort_reverse = false
sort_translit = false
linemode = "size"
show_hidden = false
show_symlink = true
scrolloff = 5
mouse_events = ["click", "scroll", "drag"]
title_format = "Yazi: {cwd}"

[preview]
wrap = "no"
tab_size = 2
max_width = 1200
max_height = 1800
cache_dir = "/home/administrator/.cache/yazi"
image_delay = 5
image_filter = "triangle"
image_quality = 75
sixel_fraction = 15
ueberzug_scale = 1
ueberzug_offset = [0, 0, 0, 0]

[opener]
edit = [
    { run = '${EDITOR:-vi} "$@"', desc = "$EDITOR", block = true, for = "unix" },
    { run = 'code %*', orphan = true, desc = "code", for = "windows" },
    { run = 'code -w %*', block = true, desc = "code (block)", for = "windows" },
]
open = [
    { run = 'xdg-open "$1"', desc = "Open", for = "linux" },
    { run = 'open "$@"', desc = "Open", for = "macos" },
    { run = 'start "" "%1"', orphan = true, desc = "Open", for = "windows" },
]
reveal = [
    { run = 'xdg-open "$(dirname "$1")"', desc = "Reveal", for = "linux" },
    { run = 'open -R "$1"', desc = "Reveal", for = "macos" },
    { run = 'explorer /select,"%1"', orphan = true, desc = "Reveal", for = "windows" },
    { run = '''exiftool "$1"; echo "Press enter to exit"; read _''', block = true, desc = "Show EXIF", for = "unix" },
]
extract = [
    { run = 'ya pub extract --list "$@"', desc = "Extract here", for = "unix" },
    { run = 'ya pub extract --list %*', desc = "Extract here", for = "windows" },
]
play = [
    { run = 'mpv --force-window "$@"', orphan = true, for = "unix" },
    { run = 'mpv --force-window %*', orphan = true, for = "windows" },
    { run = '''mediainfo "$1"; echo "Press enter to exit"; read _''', block = true, desc = "Show media info", for = "unix" },
]

[open]
rules = [
    # Folder
    { name = "*/", use = ["edit", "open", "reveal"] },
    # Text
    { mime = "text/*", use = ["edit", "reveal"] },
    # Image
    { mime = "image/*", use = ["open", "reveal"] },
    # Media
    { mime = "{audio,video}/*", use = ["play", "reveal"] },
    # Archive
    { mime = "application/{,g}zip", use = ["extract", "reveal"] },
    { mime = "application/x-{tar,bzip*,7z-compressed,xz,rar}", use = ["extract", "reveal"] },
    # JSON
    { mime = "application/{json,x-ndjson}", use = ["edit", "reveal"] },
    { mime = "*/javascript", use = ["edit", "reveal"] },
    # Empty file
    { mime = "inode/x-empty", use = ["edit", "reveal"] },
    # Fallback
    { name = "*", use = ["open", "reveal"] },
]

[tasks]
micro_workers = 10
macro_workers = 25
bizarre_retry = 5
image_alloc = 536870912  # 512MB
image_bound = [0, 0]
suppress_preload = false

[plugin]
fetchers = [
    { id = "mime", name = "*", run = "mime", if = "!mime", prio = "high" },
]
prepend_previewers = [
    { mime = "*/", run = "eza-preview"},
    { mime = "{image,audio,video}/*", run = "mediainfo"},
    { mime = "{image,audio,video}/*", run = "mediainfo"},
    { mime = "application/x-subrip", run = "mediainfo"},
    { mime = "application/x-srt", run = "mediainfo"},
    { mime = "application/*zip", run = "ouch"},
    { mime = "application/x-tar", run = "ouch"},
    { mime = "application/x-bzip2", run = "ouch"},
    { mime = "application/x-bzip", run = "ouch"},
    { mime = "application/x-xz", run = "ouch"},
    { mime = "application/x-7z-compressed", run = "ouch"},
    { mime = "application/x-rar-compressed", run = "ouch"},
    { mime = "application/x-iso9660-image", run = "ouch"},
    { mime = "application/x-iso9660-image", run = "mediainfo"},
    { mime = "application/x-zip-compressed", run = "mediainfo"},
    { mime = "application/x-zip", run = "mediainfo"},
    { mime = "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", run = "excel"},
    { mime = "text/csv", run = "miller" },
    { mime = "application/octet-stream", run = "hexyl"}
]
previewers = [
    { name = "*/", run = "folder", sync = true },
    # Code
    { mime = "text/*", run = "code" },
    { mime = "*/{xml,javascript,x-wine-extension-ini}", run = "code" },
    # JSON
    { mime = "application/{json,x-ndjson}", run = "json" },
    # Image
    { mime = "image/{avif,hei?,jxl,svg+xml}", run = "magick" },
    { mime = "image/*", run = "image" },
    # Video
    { mime = "video/*", run = "video" },
    # PDF
    { mime = "application/pdf", run = "pdf" },
    # Archive
    { mime = "application/{,g}zip", run = "archive" },
    { mime = "application/x-{tar,bzip*,7z-compressed,xz,rar,iso9660-image}", run = "archive" },
    # Font
    { mime = "font/*", run = "font" },
    { mime = "application/vnd.ms-opentype", run = "font" },
    # Empty file
    { mime = "inode/x-empty", run = "empty" },
    # Fallback
    { name = "*", run = "file" },
]
preloaders = [
    # Image
    { mime = "image/{avif,hei?,jxl,svg+xml}", run = "magick" },
    { mime = "image/*", run = "image" },
    # Video
    { mime = "video/*", run = "video" },
    # PDF
    { mime = "application/pdf", run = "pdf" },
    # Font
    { mime = "font/*", run = "font" },
    { mime = "application/vnd.ms-opentype", run = "font" },
]

[input]
cursor_blink = false

# cd
cd_title = "Change directory:"
cd_offset = [0, 2, 50, 3]
cd_origin = "top-center"

# create
create_title = ["Create:", "Create (dir):"]
create_offset = [0, 2, 50, 3]
create_origin = "top-center"

# filter
filter_title = "Filter:"
filter_offset = [0, 2, 50, 3]
filter_origin = "top-center"

# find
find_title = ["Find next:", "Find previous:"]
find_offset = [0, 2, 50, 3]
find_origin = "top-center"

# rename
rename_title = "Rename:"
rename_offset = [0, 1, 50, 3]
rename_origin = "hovered"

# search
search_title = "Search via {n}:"
search_offset = [0, 2, 50, 3]
search_origin = "top-center"

# shell
shell_title = ["Shell:", "Shell (block):"]
shell_offset = [0, 2, 50, 3]
shell_origin = "top-center"

[confirm]
# delete
delete_title = "Permanently delete {n} selected file{s}?"
delete_offset = [0, 0, 70, 20]
delete_origin = "center"

# overwrite
overwrite_title = "Overwrite file?"
overwrite_content = "Will overwrite the following file:"
overwrite_offset = [0, 0, 50, 15]
overwrite_origin = "center"

# quit
quit_title = "Quit?"
quit_content = "The following task is still running, are you sure you want to quit?"
quit_offset = [0, 0, 50, 15]
quit_origin = "center"

# trash
trash_title = "Trash {n} selected file{s}?"
trash_offset = [0, 0, 70, 20]
trash_origin = "center"

[pick]
open_title = "Open with:"
open_origin = "hovered"
open_offset = [0, 1, 50, 7]

[which]
sort_by = "none"
sort_sensitive = false
sort_reverse = false
sort_translit = false


