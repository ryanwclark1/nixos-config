# vim:set ft=tmux:
# Smart Plugin Loader for tmux-forceline
# Hardware-aware dynamic plugin loading system

# Plugin system configuration
set -ogq @forceline_plugin_auto_load "yes"
set -ogq @forceline_plugin_path "#{d:current_file}"
set -ogq @forceline_user_plugin_path "~/.config/tmux/forceline/plugins"

# Plugin loading state
set -g @_fl_plugins_loaded ""
set -g @_fl_plugins_failed ""
set -g @_fl_hardware_detected "no"

# Hardware detection
set -g @_fl_is_laptop "#(/home/administrator/.config/tmux/plugins/tmux-forceline/utils/hardware_detection.sh detect is_laptop)"
set -g @_fl_os_type "#(/home/administrator/.config/tmux/plugins/tmux-forceline/utils/hardware_detection.sh detect os_type)"
set -g @_fl_capabilities "#(/home/administrator/.config/tmux/plugins/tmux-forceline/utils/hardware_detection.sh detect capabilities)"

# Core plugins (always loaded)
set -g @_fl_core_plugins "hostname,datetime,cpu,memory,gpu,graphics_memory,load,uptime"

# Conditional plugins based on hardware
set -g @_fl_laptop_plugins "battery"
set -g @_fl_network_plugins "lan_ip,wan_ip"
set -g @_fl_development_plugins "vcs,directory"
set -g @_fl_system_plugins "disk_usage,session"

# Plugin categories for organized loading
set -g @_fl_essential_plugins "#{@_fl_core_plugins}"
set -g @_fl_conditional_plugins ""

# Build conditional plugin list based on capabilities
%if "#{==:#{@_fl_is_laptop},true}"
  set -ag @_fl_conditional_plugins "#{@_fl_laptop_plugins},"
%endif

# Always add development and system plugins
set -ag @_fl_conditional_plugins "#{@_fl_development_plugins},#{@_fl_system_plugins},#{@_fl_network_plugins}"

# Clean up trailing comma
set -g @_fl_all_plugins "#{@_fl_essential_plugins},#{@_fl_conditional_plugins}"

# Load essential plugins (always present)
source -qF "#{d:current_file}/core/hostname/hostname.conf"
source -qF "#{d:current_file}/core/datetime/datetime.conf"
source -qF "#{d:current_file}/core/cpu/cpu.conf"
source -qF "#{d:current_file}/core/memory/memory.conf"
source -qF "#{d:current_file}/core/gpu/gpu.conf"
source -qF "#{d:current_file}/core/graphics_memory/graphics_memory.conf"
source -qF "#{d:current_file}/core/load/load.conf"
source -qF "#{d:current_file}/core/uptime/uptime.conf"

# Load conditional plugins
%if "#{==:#{@_fl_is_laptop},true}"
  source -qF "#{d:current_file}/core/battery/battery.conf"
%endif

# Load development plugins
source -qF "#{d:current_file}/extended/vcs/vcs.conf"
source -qF "#{d:current_file}/core/directory/directory.conf"

# Load system plugins
source -qF "#{d:current_file}/extended/disk_usage/disk_usage.conf"
source -qF "#{d:current_file}/core/session/session.conf"

# Load network plugins
source -qF "#{d:current_file}/extended/lan_ip/lan_ip.conf"
source -qF "#{d:current_file}/extended/wan_ip/wan_ip.conf"

# Set hardware detection flag
set -g @_fl_hardware_detected "yes"

# Display loading summary
%if "#{==:#{@forceline_debug_modules},yes}"
  display-message "Hardware: laptop=#{@_fl_is_laptop}, os=#{@_fl_os_type}"
  display-message "Loaded plugins: #{@_fl_all_plugins}"
%endif

%if "#{!=:#{@_fl_plugins_failed},}"
  display-message "Failed to load plugins: #{@_fl_plugins_failed}"
%endif

# Register loaded plugins for status bar configuration
set -g @forceline_active_plugins "#{@_fl_all_plugins}"