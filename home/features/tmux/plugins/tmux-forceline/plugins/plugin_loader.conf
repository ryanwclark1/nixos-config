# vim:set ft=tmux:
# Plugin Loader for tmux-forceline
# Dynamic plugin discovery and loading system

# Plugin system configuration
set -ogq @forceline_plugins "cpu,memory,battery,datetime,hostname,load,uptime"
set -ogq @forceline_plugin_path "#{d:current_file}"
set -ogq @forceline_user_plugin_path "~/.config/tmux/forceline/plugins"

# Plugin loading state
set -g @_fl_plugins_loaded ""
set -g @_fl_plugins_failed ""

# Core plugin registry (always available)
set -g @_fl_core_plugins "cpu,memory,battery,datetime,hostname,load,uptime,session,directory"

# Extended plugin registry (opt-in)
set -g @_fl_extended_plugins "wan_ip,lan_ip,disk_usage,vcs,weather,network,kubernetes,git,docker,system"

# Plugin loading function - processes comma-separated plugin list
%hidden FL_LOAD_PLUGINS='
for plugin in $(echo "#{@forceline_plugins}" | tr "," " "); do
  plugin_loaded=0
  
  # Try loading from core plugins first
  if [ -f "#{@forceline_plugin_path}/core/${plugin}/${plugin}.conf" ]; then
    tmux source "#{@forceline_plugin_path}/core/${plugin}/${plugin}.conf"
    plugin_loaded=1
  # Try extended plugins
  elif [ -f "#{@forceline_plugin_path}/extended/${plugin}/${plugin}.conf" ]; then
    tmux source "#{@forceline_plugin_path}/extended/${plugin}/${plugin}.conf"  
    plugin_loaded=1
  # Try community plugins
  elif [ -f "#{@forceline_plugin_path}/community/${plugin}/${plugin}.conf" ]; then
    tmux source "#{@forceline_plugin_path}/community/${plugin}/${plugin}.conf"
    plugin_loaded=1
  # Try user plugins
  elif [ -f "#{@forceline_user_plugin_path}/${plugin}/${plugin}.conf" ]; then
    tmux source "#{@forceline_user_plugin_path}/${plugin}/${plugin}.conf"
    plugin_loaded=1
  fi
  
  # Track loading status
  if [ $plugin_loaded -eq 1 ]; then
    current_loaded=$(tmux show -gv @_fl_plugins_loaded)
    tmux set -g @_fl_plugins_loaded "${current_loaded},${plugin}"
  else
    current_failed=$(tmux show -gv @_fl_plugins_failed)
    tmux set -g @_fl_plugins_failed "${current_failed},${plugin}"
  fi
done
'

# Execute plugin loading
run-shell "$FL_LOAD_PLUGINS"

# Display loading summary if any plugins failed
%if "#{!=:#{@_fl_plugins_failed},}"
  display-message "Failed to load plugins: #{@_fl_plugins_failed}"
%endif

# Initialize plugin-specific configurations
%if "#{!=:#{@_fl_plugins_loaded},}"
  set -g @forceline_active_plugins "#{@_fl_plugins_loaded}"
%endif